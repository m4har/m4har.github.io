/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 airplane.gltf --transform
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

let angle = 0;
let speed = 0.2;

export function Airplane(props) {
  const { nodes, materials } = useGLTF("/airplane-transformed.glb");
  const ref = useRef();

  useFrame(({ clock }, delta) => {
    const radius = Math.abs(-1) + 0.5;
    angle += delta * speed;
    let x = radius * Math.cos(angle);
    let z = radius * Math.sin(angle);
    ref.current.position.x = x;
    ref.current.position.z = z;
    ref.current.rotation.z = -Math.PI / 2;
    ref.current.rotation.y = -angle;
  }, -1);
  return (
    <group {...props} dispose={null} ref={ref}>
      <mesh geometry={nodes.Plane093.geometry} material={materials.White} />
      <mesh geometry={nodes.Plane093_1.geometry} material={materials.Red} />
      <mesh
        geometry={nodes.Plane093_2.geometry}
        material={materials["Material.001"]}
      />
    </group>
  );
}

useGLTF.preload("/airplane-transformed.glb");
